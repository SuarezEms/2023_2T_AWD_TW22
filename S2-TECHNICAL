<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="styles.css">
  <title>Day Buttons</title>
</head>
<body>
  <div class="container">
    <div class="buttons">
      <h1>Day Buttons</h1>
      <button class="violet" onclick="showBox('Monday', 'violet')">Monday</button>
      <button class="pink" onclick="showBox('Tuesday', 'pink')">Tuesday</button>
      <button class="blue" onclick="showBox('Wednesday', 'blue')">Wednesday</button>
      <button class="yellowgreen" onclick="showBox('Thursday', 'yellowgreen')">Thursday</button>
      <button class="yellow" onclick="showBox('Friday', 'yellow')">Friday</button>
      <button class="orange" onclick="showBox('Saturday', 'orange')">Saturday</button>
      <button class="red" onclick="showBox('Sunday', 'red')">Sunday</button>
    </div>
    <div class="box" id="box"></div>
  </div>
  <script src="script.js"></script>
</body>
</html>


//css
:root {
  --frame-color: black;
}

.container {
  display: flex;
  align-items: center;
}

.buttons {
  display: flex;
  flex-direction: column;
  margin-right: 20px;
}

button {
  margin: 10px;
  padding: 10px;
  width: 120px;
  border: 2px solid var(--frame-color); /* Add a colored border around the buttons */
  color: white;
  font-size: 16px;
  font-weight: bold;
  text-align: center;
  text-transform: uppercase;
  cursor: pointer;
  border-radius: 5px;
  transition: background-color 0.5s ease, transform 0.3s ease, border-color 0.3s ease;
}

button:hover {
  transform: scale(1.1);
  border-color: white;
}

.violet {
  background-color: violet;
}

.pink {
  background-color: pink;
}

.blue {
  background-color: blue;
}

.yellowgreen {
  background-color: yellowgreen;
}

.yellow {
  background-color: yellow;
}

.orange {
  background-color: orange;
}

.red {
  background-color: red;
}

.box {
  width: 200px;
  height: 200px;
  background-color: white;
  position: relative;
  margin: 10px;
  border: 5px solid;
  border-image: linear-gradient(0deg, var(--frame-color) 0%, var(--frame-color) 100%);
  border-image-slice: 1;
  border-radius: 10px;
  transition: top 1s ease, opacity 0.8s ease, border-color 1s ease; /* Adjusted transition for .box */
}

.box.moveUp {
  top: -100px;
  opacity: 0;
}

.box.moveDown {
  top: 0;
}

.box.colorChange {
  border-color: transparent; /* Set the border color to transparent during color change */
}


//javascript
function showBox(day, frameColor) {
  let box = document.getElementById('box');
  if (!box) return;

  // Clone the current box
  let oldBox = box.cloneNode(true);
  oldBox.style.zIndex = 1; // Place the old box above the new box

  // Append the old box to the container
  document.querySelector('.container').appendChild(oldBox);

  // Get the computed style of the old box to force a reflow before the transition
  window.getComputedStyle(oldBox).transform;

  // Apply transition to the old box (slide up)
  oldBox.style.transition = 'transform 1s ease, opacity 0.8s ease'; 
  oldBox.style.opacity = 0;
  oldBox.style.transform = 'translateY(-100%)';

  // Continue with the rest of your showBox logic...
  let color = '';
  switch (day) {
    case 'Monday':
      color = 'violet';
      break;
    case 'Tuesday':
      color = 'pink';
      break;
    case 'Wednesday':
      color = 'blue';
      break;
    case 'Thursday':
      color = 'yellowgreen';
      break;
    case 'Friday':
      color = 'yellow';
      break;
    case 'Saturday':
      color = 'orange';
      break;
    case 'Sunday':
      color = 'red';
      break;
    default:
      color = 'black';
  }

  // Update the properties of the existing box (slide down)
  box.style.transition = 'transform 1s ease, background-color 1s ease'; 
  box.style.transform = 'translateY(100%)'; // Slide down
  box.style.backgroundColor = color;

  // Clean up after the transition
  setTimeout(() => {
    oldBox.remove(); // Remove the old box from the DOM
    box.style.transform = 'translateY(0)'; // Reset position of the new box
  }, 2000);
}

